#pragma once


const char vertexShader [] =
        "#version 410 \n"
        "layout (location = 0) in vec2 vertexFont;\n"
        "uniform mat4 matrix;\n"
        "layout (location = 1) in vec2 textureCoord;\n"
        " \n"
        "out vec2 finalColor;\n"
        "\n"
        "void main ()\n"
        "{\n"
        "    gl_Position = matrix * vec4(vertexFont, 0, 1);\n"
        "    finalColor = textureCoord;\n"
        "}";

const char fragmentShader [] =
        "#version 410 \n"
        "#ifdef GL_FRAGMENT_PRECISION_HIGH   \n"
        "precision highp float;      \n"
        "#else                     \n"
        "precision mediump float;   \n"
        "#endif      \n"
        "in vec2 finalColor;\n"
        "uniform sampler2D fontSampl;\n"
        "uniform float texLevels;\n"
        "uniform float texW;\n"
        "\n"
        "out vec4 color;\n"
        "//    0.827,0.968,0.105 - yellow     \n"
        "vec3 glyph_color    = vec3(1.0,1.0,1.0);  // was 1.0,1.0,1.0\n"
        "const float glyph_center   = 0.50;   // was 0.50\n"
        "vec3 outline_color  = vec3(0.0,0.0,0.0);  // was 0.0,0.0,0.0\n"
        "const float outline_center = 0.55; // was 0.55\n"
        "vec3 glow_color     = vec3(1.0,1.0,1.0);  //was 1.0,1.0,1.0\n"
        "const float glow_center    = 0.15; // was 1.25\n"
        "\n"
        "\n"
        "vec2 remap(vec2 floatdata) {\n"
        "    return floatdata * (texLevels-1.0) / texLevels * 2.0 - 1.0;\n"
        "}\n"
        "\n"
        "void main()\n"
        "{\n"
        "//    vec2 uv = finalColor.xy;\n"
        "//    vec3 colorMain = vec3(0.74, 0.301, 0.874);\n"
        "//    float t = texture(fontSampl, uv).r;\n"
        "//    color = vec4(t * colorMain.rgb, 1.0);\n"
        "    \n"
        "//        vec3 texel = texture(fontSampl, finalColor.xy).rgb;\n"
        "//        vec2 distvec = remap(texel.rg);\n"
        "//         \n"
        "//        float dist = length(distvec) + (texel.b-0.5)/texW;\n"
        "//        color = vec4(vec2(mod(10.0*dist, 1.0)), texel.b, 1.0);\n"
        "    \n"
        "    \n"
        "//       vec3 texel = texture(fontSampl, finalColor.xy).rgb;\n"
        "//       vec2 distvec = remap(texel.rg);\n"
        "//             \n"
        "//       vec2 rainbow = 0.5+0.5*(normalize(distvec));\n"
        "//       color = vec4(rainbow, 1.0 - (length(distvec)+texel.b-0.5)*4.0, 1.0); \n"
        "\n"
        "\n"
        "//        float D = texture(fontSampl, finalColor).r;\n"
        "//        float aastep = 0.5 * fwidth(D);\n"
        "//        float pattern = smoothstep(-aastep, aastep, D);\n"
        "//        color = vec4(vec3(pattern), 1.0);\n"
        "    vec4  colorK = texture(fontSampl, finalColor);\n"
        "    float dist  = colorK.r;\n"
        "    float width = fwidth(dist);\n"
        "    float alpha = smoothstep(glyph_center-width, glyph_center+width, dist);\n"
        "      \n"
        "    // Smooth\n"
        "    // color = vec4(glyph_color, alpha);\n"
        "    \n"
        "    // Outline\n"
        "    // float mu = smoothstep(outline_center-width, outline_center+width, dist);\n"
        "    // vec3 rgb = mix(outline_color, glyph_color, mu);\n"
        "    // color = vec4(rgb, max(alpha,mu));\n"
        "    \n"
        "    // Glow\n"
        "     // vec3 rgb = mix(glow_color, glyph_color, alpha);\n"
        "    // float mu = smoothstep(glyph_center, glow_center, sqrt(dist));\n"
        " //   color = vec4(rgb, max(alpha,mu));\n"
        "    \n"
        "    // Glow + outline\n"
        "    \n"
        "      vec3 rgb = mix(glow_color, glyph_color, alpha);\n"
        "      float mu = smoothstep(glyph_center, glow_center, sqrt(dist));\n"
        "      colorK = vec4(rgb, max(alpha,mu));\n"
        "      float beta = smoothstep(outline_center-width, outline_center+width, dist);\n"
        "      rgb = mix(outline_color, colorK.rgb, beta);\n"
        "       //vec4 aUU = texture(fontSampl, finalColor); \n"
        "      //color = aUU * vec4(0.234, 0.875, 0.744, 1.0); \n"
        "     // color = vec4( aUU.rgb, 0.9); \n"
        "                                   \n"
        "      color = vec4(rgb, max(colorK.a,beta));\n"
        "     \n"
        "      \n"
        "}";